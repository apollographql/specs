"""
Indicates that a field is only null if there is a matching error in the `errors` array.
In all other cases, the field is non-null.

Tools doing code generation may use this information to generate the field as non-null.

This directive can be applied on field definitions:

```graphql
type User {
    email: String @nullOnlyOnError
}
```

It can also be applied on object type extensions for use in client applications that do
not own the base schema:

```graphql
extend type User @nullOnlyOnError(field: "email")
```

Control over list items is done using the `level` argument:

```graphql
type User {
    # friends is nullable but friends[0] is null only on errors
    friends @nullOnlyOnError(level: 1)
}
```

@param field the name of the field if applied to an object definition or null if applied
to a field definition

@param level in case of a list type, level is the dimension where to apply the modifier,
starting at 0 if there is no list.
If level is null, the modifier is applied to all levels
"""
directive @nullOnlyOnError(field: String = null, level: Int = null) repeatable on FIELD_DEFINITION | OBJECT

"""
Indicates that a field acts as an error boundary in case of a GraphQL error.

By default, the first GraphQL error throws and fails the whole response.

@param level in case of a list type, level is the dimension where to apply the modifier,
starting at 0 if there is no list.
If level is null, the modifier is applied to all levels
"""
directive @catch(if: Boolean! = true, to: CatchTo! = RESULT, level: Int = null) repeatable on FIELD

enum CatchTo {
    NULL,
    THROW,
    RESULT,
}